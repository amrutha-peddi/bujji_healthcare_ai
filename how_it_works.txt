# Project: Healthcare AI Diagnosis Assistant
This is a Flask-based web application that helps users understand potential medical conditions based on the symptoms they enter. It provides professional advice, generates summaries using AI, narrates the diagnosis, and allows PDF downloads.

## üîß Features
1. **Symptom Analysis**:
   - User enters symptoms in a text box.
   - The app scans a predefined database of symptoms.
   - If symptoms are matched, the app shows a probable diagnosis, advice, and severity.

2. **AI Summarization**:
   - Uses Hugging Face's `facebook/bart-large-cnn` model.
   - Generates a concise summary from the full diagnostic output using the `transformers` library.

3. **Voice Narration**:
   - Uses `pyttsx3` to speak out the AI-generated summary.
   - Works offline and supports most systems with a built-in voice engine.

4. **PDF Report Generation**:
   - The app creates a downloadable PDF of the diagnosis summary using the `fpdf` library.

5. **Web Interface**:
   - Clean and simple user interface with symptom autocomplete and chatbot-style responses.
   - Users can download the summary or hear it spoken aloud.

## üß† How it works (Internally)
- **User Input** ‚Üí Text form.
- **Diagnosis** ‚Üí Based on keyword match in `SYMPTOM_MAP`.
- **Summary** ‚Üí Generated by `transformers.pipeline("summarization")`.
- **Voice** ‚Üí Text read aloud via `pyttsx3`.
- **PDF** ‚Üí Dynamically generated from summary text.
- **Result** ‚Üí Rendered on `index.html` with result cards and action buttons.

## üñ•Ô∏è How to Run
1. Install dependencies:
   ```bash
   pip install -r requirements.txt
